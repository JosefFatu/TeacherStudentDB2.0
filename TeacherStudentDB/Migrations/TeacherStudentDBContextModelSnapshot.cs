// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace TeacherStudentDB.Migrations
{
    [DbContext(typeof(TeacherStudentDBContext))]
    partial class TeacherStudentDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TeacherStudentDB.Models.classroom", b =>
                {
                    b.Property<int>("classroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("block")
                        .HasColumnType("int");

                    b.Property<string>("className")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("level")
                        .HasColumnType("int");

                    b.Property<int?>("studentId")
                        .HasColumnType("int");

                    b.Property<int?>("teacherId")
                        .HasColumnType("int");

                    b.HasKey("classroomId");

                    b.HasIndex("studentId");

                    b.HasIndex("teacherId");

                    b.ToTable("classroom");
                });

            modelBuilder.Entity("TeacherStudentDB.Models.courses", b =>
                {
                    b.Property<int>("coursesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.Property<int>("teacherId")
                        .HasColumnType("int");

                    b.HasKey("coursesId");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("TeacherStudentDB.Models.student", b =>
                {
                    b.Property<int>("studentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teacherId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("studentId");

                    b.ToTable("student");
                });

            modelBuilder.Entity("TeacherStudentDB.Models.teacher", b =>
                {
                    b.Property<int>("teacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("teacherId");

                    b.ToTable("teacher");
                });

            modelBuilder.Entity("TeacherStudentDB.Models.classroom", b =>
                {
                    b.HasOne("TeacherStudentDB.Models.student", "student")
                        .WithMany("classroom")
                        .HasForeignKey("studentId");

                    b.HasOne("TeacherStudentDB.Models.teacher", "teacher")
                        .WithMany("classroom")
                        .HasForeignKey("teacherId");

                    b.Navigation("student");

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("TeacherStudentDB.Models.student", b =>
                {
                    b.Navigation("classroom");
                });

            modelBuilder.Entity("TeacherStudentDB.Models.teacher", b =>
                {
                    b.Navigation("classroom");
                });
#pragma warning restore 612, 618
        }
    }
}
